{"mappings":"AACA,MAAMA,UAAgCC,sBACpCC,MAAgB,EAEhB,WAAAC,GACEC,O,CAGF,+BAAWC,GACT,MAAO,CACL,CACEC,KAAM,OACNC,aAAc,GACdC,SAAU,EACVC,SAAU,G,CAKhB,OAAAC,CAAQC,EAA6BC,EAA8BC,GAGjE,IAAIC,EAAQH,EAAU,GAClBI,EAASH,EAAW,GACxB,GAAoB,GAAhBE,EAAME,OACR,OAAO,EAGT,IAAIC,EAAcH,EAAM,GAAGE,OAE3B,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAaC,IAAK,CACpC,IAAIC,EAASL,EAAM,GAAGI,IACjBE,KAAKlB,MAAQiB,EAAS,EACzBJ,EAAO,GAAGG,GAAK,EAGfH,EAAO,GAAGG,GAAK,EAEjBE,KAAKlB,KAAOiB,EAAS,C,CAGvB,OAAO,C,EAIXE,kBAAkB,kBAAmBrB","sources":["src/pulse-generator.ts"],"sourcesContent":["\r\nclass PulseGeneratorProcessor extends AudioWorkletProcessor {\r\n  isOn: boolean = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  static get parameterDescriptors() {\r\n    return [\r\n      {\r\n        name: \"gain\",\r\n        defaultValue: 0.2,\r\n        minValue: 0,\r\n        maxValue: 1,\r\n      },\r\n    ];\r\n  }\r\n\r\n  process(inputList: Float32Array[][], outputList: Float32Array[][], parameters: Record<string, Float32Array>) {\r\n    // const gain = parameters.gain[0];\r\n\r\n    let input = inputList[0];\r\n    let output = outputList[0];\r\n    if (input.length == 0) {\r\n      return true;\r\n    }\r\n\r\n    let sampleCount = input[0].length;\r\n\r\n    for (let i = 0; i < sampleCount; i++) {\r\n      let sample = input[0][i];\r\n      if (!this.isOn && sample > 0) {\r\n        output[0][i] = 1.0;\r\n      }\r\n      else {\r\n        output[0][i] = 0.0;\r\n      }\r\n      this.isOn = sample > 0;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nregisterProcessor(\"pulse-generator\", PulseGeneratorProcessor);"],"names":["$acb83139c83e4379$var$PulseGeneratorProcessor","AudioWorkletProcessor","isOn","constructor","super","parameterDescriptors","name","defaultValue","minValue","maxValue","process","inputList","outputList","parameters","input","output","length","sampleCount","i","sample","this","registerProcessor"],"version":3,"file":"pulse-generator.cea0d534.js.map"}